/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'jacoco'
    id 'maven-publish'
}

repositories {
    mavenCentral()
}

jacoco {
    toolVersion = "0.8.12"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    // Extracted from the SailPoint IIQ war download
    implementation fileTree(dir: '../extLibs/WEB-INF/lib', includes: ['*.jar'])
    implementation fileTree(dir: '../extLibs/WEB-INF/lib-connectors', includes: ['*.jar'], excludes: ['jcifs2.jar'])
    implementation fileTree(dir: '../extLibs', includes: ['*.jar'])

    implementation 'commons-io:commons-io:2.11.0'
    implementation ('commons-logging:commons-logging:1.2') {
        because 'some rules use log4j1.2 interface... and the testing framework uses this too'
    }

    implementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    implementation 'org.mockito:mockito-inline:3.4.0'

    testImplementation 'bsf:bsf:2.4.0'
    testImplementation 'net.sf.jasperreports:jasperreports:3.7.5'
    testImplementation 'org.apache.logging.log4j:log4j-api:2.17.1'
    testImplementation 'org.apache.logging.log4j:log4j-core:2.17.1'
    testImplementation 'org.apache.logging.log4j:log4j-jcl:2.17.1'
    testImplementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.17.1'
    testImplementation ('org.apache.logging.log4j:log4j-1.2-api:2.17.1') {
        because 'some rules use log4j1.2 interface'
    }
    testImplementation 'org.apache.lucene:lucene-analyzers:3.6.2'
    testImplementation 'org.aspectj:aspectjweaver:1.8.6'
    testImplementation 'org.hibernate:hibernate-core:4.2.6.Final'
    testImplementation 'org.json:json:20211205'
}

java {
    withSourcesJar()
    withJavadocJar()
}

tasks.withType(JavaCompile) {
    options.debug = true
    options.debugOptions.debugLevel = 'lines,vars,source'
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = file("${buildDir}/jacocoHtml")
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId 'io.github.jtgasper3'
            artifactId 'iiq-rule-testing'

            from components.java
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/jtgasper3/iiq-rule-testing")
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}
